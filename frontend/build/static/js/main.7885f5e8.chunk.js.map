{"version":3,"sources":["components/styles/Form.js","components/PostForm.js","components/Comment.js","utils/dateFunctions.js","components/CommentForm.js","components/styles/Card.js","components/Post.js","services/posts.js","services/login.js","components/LoginForm.js","services/signUp.js","components/SignUpForm.js","components/Page.js","App.js","index.js"],"names":["Form","styled","form","props","theme","red","PostForm","title","onTitleChange","onContentChange","content","addPost","onSubmit","class","value","onChange","type","CommentContainer","div","grey","Comment","user","date","className","raw_date","Date","seconds","Math","floor","interval","timeSince","CommentForm","postId","addComment","handleCommentChange","comment","e","Card","offWhite","Title","ContentContainer","ButtonContainer","Post","likes","addLike","comments","id","currentUser","useState","expand","setExpand","username","day","getDate","monthIndex","getMonth","year","getFullYear","formatDate","onClick","map","key","style","color","href","token","getAll","a","async","fetch","response","json","commits","create","newObject","config","method","headers","Authorization","body","JSON","stringify","console","log","result","update","createComment","setToken","newToken","login","credentials","LoginForm","handleSubmit","password","handleUsernameChange","handlePasswordChange","SignUpForm","handleLogin","setPassword","setUsername","name","setName","signedUp","setSignedUp","setErrorMessage","handleSignUp","event","preventDefault","signUpService","setTimeout","to","target","lightgrey","maxWidth","bs","StyledPage","black","Inner","Page","this","children","Component","Button","button","Navbar","SortContainer","App","posts","setPosts","setTitle","setContent","setComment","setUser","expandForm","setExpandForm","sortDate","setSortDate","sortLikes","setSortLikes","sortComments","setSortComments","useEffect","postService","then","data","loggedUserJSON","window","localStorage","getItem","parse","loginService","setItem","newPost","length","concat","newComment","find","post","changedPost","returnedPost","catch","error","filter","clear","path","render","sort","b","applySort","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7885f5e8.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst Form = styled.form`\n  background: rgba(0, 0, 0, 0.02);\n  border: 5px solid white;\n  padding: 5px;\n  line-height: 1.5;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  label {\n    display: block;\n    margin-bottom: 1rem;\n  }\n  input,\n  textarea,\n  select {\n    width: 100%;\n    padding: 0.5rem;\n    font-size: 1rem;\n    border: 0;\n  }\n  button,\n  input[type='submit']{  \n    display: inline-block;  \n    border-radius: 4px;  \n    background-color: #f4511e;  \n    border: none;  \n    background-color: ${props => props.theme.red};  \n    color: white;\n    text-align: center;\n    font-size: 12px;\n    padding: 10px 0;  \n    width: 10%;  \n    transition: all 0.5s;  \n    cursor: pointer;  \n    }\n  .form-item {\n    margin: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  button:hover {\n    opacity: 0.5;\n  }\n`;\n\nexport default Form;\n","import React from 'react';\nimport Form from '../components/styles/Form'\n\nconst PostForm = ({title, onTitleChange, onContentChange, content, addPost}) => (\n    <Form onSubmit={addPost}>\n      <div class=\"form-item\">\n        <p>Title</p>\n        <input value={title} onChange={onTitleChange}/>\n      </div>\n      <div class=\"form-item\">\n        <p>Content</p>\n        <textarea value={content} onChange={onContentChange}/>\n      </div>\n      <div class=\"form-item\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </Form>\n  );\n\nexport default PostForm;","import React from 'react';\nimport styled from 'styled-components'\nimport { timeSince } from '../utils/dateFunctions'\n\nconst CommentContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  .username {\n    color: ${props => props.theme.red};\n    font-weight: 900;\n  }\n  .left {\n    display: flex;\n  }\n  .right {\n    font-weight: 100;\n    color: ${props => props.theme.grey};\n    font-size: 8px;\n    min-width: 100px;\n  }\n`\nconst Comment = ({content, user, date}) => (\n      <CommentContainer>\n        <div className=\"left\">\n          <p className=\"username\">{user}</p>\n          <p>{content}</p>\n        </div>\n        <div className=\"right\">\n          <p>{timeSince(date)}</p>\n        </div>\n      </CommentContainer>\n  );\n\nexport default Comment;","export const formatDate = (raw_date) => {\n  const date = new Date(raw_date)\n  var monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\",\n    \"November\", \"December\"\n  ];\n\n  var day = date.getDate();\n  var monthIndex = date.getMonth();\n  var year = date.getFullYear();\n\n  return day + ' ' + monthNames[monthIndex] + ' ' + year;\n}\n\nexport const timeSince = (raw_date) =>{\n  const date = new Date(raw_date)\n  var seconds = Math.floor((new Date() - date) / 1000);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval < 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds / 60) + \" minutes\";;\n}\n","import React from 'react';\nimport Form from '../components/styles/Form'\n\nconst CommentForm = ({postId, addComment, handleCommentChange, comment}) => (\n    <Form onSubmit={(e) => addComment(e, postId)}>\n    <div className=\"form-item\">\n      <input type=\"text\" value={comment} onChange={handleCommentChange}/>\n    </div>\n    <div className=\"form-item\">\n      <button type=\"submit\">Submit</button>\n    </div>\n    </Form>\n);\n\nexport default CommentForm;","import styled from 'styled-components';\n\nconst Card = styled.div`\n  background: white;\n  border: 1px solid ${props => props.theme.offWhite};\n  position: relative;\n  padding: 10px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport default Card;\n","import React, {useState} from 'react';\nimport Comment from './Comment'\nimport CommentForm from './CommentForm'\nimport Card from '../components/styles/Card'\nimport styled from 'styled-components'\nimport { formatDate } from '../utils/dateFunctions'\nimport { FaThumbsUp, FaCommentAlt, FaComment } from 'react-icons/fa';\n\nconst Title = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  font-weight: 100;\n`\n\nconst ContentContainer = styled.div`\n   min-height: 100px;\n   display: flex;\n   flex-direction: column;\n   align-items: space-around;\n`\n\nconst ButtonContainer = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  color: ${props => props.theme.red}\n`\n\nconst Post = ({title, content, likes, addLike, comments, id, comment, user, date, currentUser, addComment, handleCommentChange}) => {\n  const [expand, setExpand] = useState(false)\n  return (\n    <Card>\n      <Title>\n      <h1>{title}</h1>\n      <div>\n        <p>A post by {user.username}</p>\n        <p>{formatDate(date)}</p>\n      </div>\n      </Title>\n      <hr></hr>\n      <ContentContainer>\n        <p>{content}</p>\n      </ContentContainer>\n      <hr></hr>\n        <h2>{likes} Likes </h2>\n      { currentUser &&\n        <ButtonContainer>\n          <p onClick={() => addLike(id)}>Like <FaThumbsUp/></p>\n          <p onClick={() => setExpand(true)}>Leave a comment <FaCommentAlt/></p>\n        </ButtonContainer>\n      }\n        { expand && currentUser && comments.map( comment => (\n          <Comment \n          key={comment.id}\n          content={comment.content}\n          user={comment.user.username}\n          date={comment.date}\n          />\n        ))\n        }\n      { expand && currentUser && \n        <CommentForm \n        addComment={addComment}\n        handleCommentChange={handleCommentChange}\n        comment={comment}\n        postId={id}\n        />\n      }\n      { !currentUser && <a style={{color: \"grey\"}} href=\"/login\">Login to leave a comment</a> }\n    </Card>\n  )\n};\n\nexport default Post;","const baseUrl = '/api/posts'\n\nlet token = null \n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await fetch(baseUrl)\n  const commits = await response.json()\n  return commits\n}\n\nconst create = async newObject => {\n  const config = {\n    method: 'POST',\n    headers: { Authorization: token, 'Content-Type': 'application/json;charset=utf-8'},\n    body: JSON.stringify(newObject)\n  }\n  console.log(config)\n  const response = await fetch(baseUrl, config)\n  const result = await response.json()\n  return result\n}\n\nconst update = async (id, newObject) => {\n  const config = {\n    method: 'PUT',\n    headers: { Authorization: token, 'Content-Type': 'application/json;charset=utf-8' },\n    body: JSON.stringify(newObject)\n  }\n  const response = await fetch(`${ baseUrl }/${id}`,config)\n  const result = await response.json()\n  console.log(result, \"result\")\n  return result\n}\n\n\nconst createComment = async (id, newObject) => {\n  const config = {\n    method: 'POST',\n    headers: { Authorization: token, 'Content-Type': 'application/json;charset=utf-8'},\n    body: JSON.stringify(newObject)\n  }\n  console.log(config)\n  const response = await fetch(`${baseUrl}/${id}/comments`, config)\n  const result = await response\n  console.log(result)\n  return result\n}\n\nexport default { getAll, create, update, createComment, setToken } ","const baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const config = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json;charset=utf-8' },\n    body: JSON.stringify(credentials)\n  }\n  console.log(config.body)\n  const response = await fetch(baseUrl, config)\n  const result = await response.json()\n  return result\n}\n\nexport default { login }\n\n","import React from 'react'\nimport Form from '../components/styles/Form'\n\nconst LoginForm = ({\n  handleSubmit,\n  username,\n  password,\n  handleUsernameChange,\n  handlePasswordChange\n }) => {\n return (\n   <div>\n     <Form onSubmit={handleSubmit}>\n       <div className=\"form-item\">\n         <p>Username</p>\n         <input\n           value={username}\n           onChange={handleUsernameChange}\n         />\n       </div>\n       <div className=\"form-item\">\n         <p>Password</p>\n         <input\n            type=\"password\"\n           value={password}\n           onChange={handlePasswordChange}\n         />\n     </div>\n      <div className=\"form-item\">\n       <button type=\"submit\">login</button>\n      </div>\n     </Form>\n   </div>\n )\n}\n\nexport default LoginForm","const baseUrl = '/api/users'\n\nconst signUp = async credentials => {\n  const config = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json;charset=utf-8' },\n    body: JSON.stringify(credentials)\n  }\n  console.log(config.body)\n  const response = await fetch(baseUrl, config)\n  console.log(response)\n  const result = await response.json()\n  return result\n}\n\nexport default { signUp }\n\n","import React, { useState } from 'react'\nimport signUpService from '../services/signUp'\nimport { Redirect } from 'react-router-dom';\nimport Form from '../components/styles/Form'\n\nconst SignUpForm = ({ handleLogin }) => {\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n  const [name, setName] = useState('')\n  const [signedUp, setSignedUp] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      await signUpService.signUp({\n        username, password, name\n      })\n      setUsername('')\n      setPassword('')\n      setName('')\n      setSignedUp(true)\n    } catch (exception) {\n      setErrorMessage('Invalid details')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const signUpForm = () => (\n    <div>\n    <h2>SignUp</h2>\n    <Form onSubmit={handleSignUp}>\n      <div className=\"form-item\">\n        Username\n        <input\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div className=\"form-item\">\n        Full ame\n        <input\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n      <div className=\"form-item\">\n        Password\n        <input\n          type=\"password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n        />\n    </div>\n      <button type=\"submit\">login</button>\n    </Form>\n  </div>\n  )\n\n return (\n   <div>\n     {signedUp ? <Redirect to='/login' /> : signUpForm()}\n   </div>\n )\n}\n\nexport default SignUpForm","import React, { Component } from 'react';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\n\nconst theme = {\n  red: '#FF0000',\n  grey: '#3A3A3A',\n  lightgrey: '#E1E1E1',\n  offWhite: '#EDEDED',\n  maxWidth: '800px',\n  bs: '0 12px 24px 0 rgba(0, 0, 0, 0.09)',\n};\n\nconst StyledPage = styled.div`\n  background: white;\n  color: ${props => props.theme.black};\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box; \n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  p, label, input, select {\n    padding: 0.5rem;\n    margin: 0;\n    font-size: 1rem;\n  }\n  h1 {\n    padding: 0.5rem;\n    margin: 0;\n    font-size: 1.5rem;\n  }\n  h2 {\n    padding: 0.5rem;\n    margin: 0;\n    font-size: 1.25rem;\n  }\n  a {\n    text-decoration: none;\n    padding: 0.5rem;\n    margin: 0;\n    font-size: 1rem;\n    color: ${theme.black};\n  }\n  button { font-family: 'Roboto', sans-serif; }\n  hr {\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 1px;\n    color: red;\n    font-weight: 100;\n    border-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nclass Page extends Component {\n  render() {\n    return (\n        <ThemeProvider theme={theme}>\n          <StyledPage>\n            <Inner>{this.props.children}</Inner>\n          </StyledPage>\n        </ThemeProvider>\n    );\n  }\n}\n\nexport default Page;\n","import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from 'react-router-dom'\nimport PostForm from './components/PostForm'\nimport Post from './components/Post'\nimport postService from './services/posts'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport SignUpForm from './components/SignUpForm'\nimport styled from 'styled-components'\nimport Page from './components/Page'\nimport { FaPen, FaCalendarAlt, FaThumbsUp, FaComments } from 'react-icons/fa';\n\nconst Button = styled.button`\n  width: 100%;\n  background: ${props => props.theme.red};\n  color: white;\n  border: 0;\n  font-weight: 600;\n  padding: 0.5rem 1.2rem;\n  font-size: 2rem;\n  cursor: pointer;\n`\nconst Navbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  a {\n    background: white;\n    color: grey;\n    margin-left: 20px;\n    font-size: 1.5em;\n  }\n  .logo {\n    font-weight: 900;\n    color: black;\n  }\n`\nconst SortContainer = styled.div`\n  display: flex;\n  justify-content: stretch;\n  align-items: center;\n  color: red;\n  .sort-btn {\n    display: flex;\n    justify-content: space-around;\n    padding: 1rem;\n    flex-grow: 1;\n    cursor: pointer;\n    text-align: center;\n    border: 1px solid ${props => props.theme.offWhite};\n    \n  }\n`\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const [comment, setComment] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [expandForm, setExpandForm] = useState(false)\n  const [sortDate, setSortDate] = useState(false)\n  const [sortLikes, setSortLikes] = useState(false)\n  const [sortComments, setSortComments] = useState(false)\n  \n  console.log(sortDate, sortLikes, sortComments)\n  useEffect(() => {\n    postService.getAll()\n    .then( data => setPosts(data))\n  })\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPostappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      postService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedPostappUser', JSON.stringify(user)\n      )       \n      postService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    setUser(null)\n    window.localStorage.clear()\n    setUsername('')\n    setPassword('')\n  }\n\n\n  const addPost = e => {\n    e.preventDefault()\n    const newPost = {\n      title: title,\n      content: content,\n      id: posts.length + 1\n    }\n    postService.create(newPost).then( data => setPosts(posts.concat(data)))\n    setTitle('')\n    setContent('')\n  }\n\n  const addComment = (e, id) => {\n    e.preventDefault()\n    const newComment = {\n      content: comment,\n    }\n    postService.createComment(id, newComment)\n    const postToAddCommentTo = posts.find( post => post.id === id )\n    postToAddCommentTo.comments.concat(newComment)\n    setComment(\"\")\n  }\n\n  const addLike = (id) => {\n    const post = posts.find(post => post.id === id)\n    const changedPost = { ...post, likes: post.likes + 1 }\n    postService\n      .update(id, changedPost)\n      .then(returnedPost => {\n        returnedPost.comments = post.comments\n        setPosts(posts.map(post => post.id !== id ? post : returnedPost))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `post '${post.content}' was already  from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setPosts(posts.filter(post => post.id !== id))\n      })\n  }\n\n  const applySort = (posts) => {\n    if (sortDate) {\n      posts.sort( (a,b) => new Date(a.date) - new Date(b.date))\n      setSortLikes(false)\n      setSortComments(false)\n\n    }  \n    if (sortLikes) {\n      posts.sort( (a,b) => a.likes - b.likes)\n      setSortDate(false)\n      setSortComments(false)\n    } \n    if (sortComments) {\n      posts.sort( (a,b) => a.comments.length - b.comments.length)\n      setSortDate(false)\n      setSortLikes(false)\n    }\n    return posts\n  }\n  \n\n  const loginForm = () => (\n    <LoginForm\n      username={username}\n      password={password}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n      handleSubmit={handleLogin}\n    />\n  )\n\n  return (\n    <Page>\n    <Router>\n      <Navbar>\n        <div>\n        <Link to=\"/\"><span className=\"logo\">FlipPad</span></Link>\n        </div>\n        <div>\n          {!user && \n            <div>\n                <Link to=\"/login\">Login</Link>\n                <Link to=\"/signup\">SignUp</Link>\n            </div>\n          }\n          {user &&\n            <div>\n              <Link onClick={handleLogout}>Logout</Link>\n            </div>\n        }\n        </div>\n      </Navbar>\n      <Route path=\"/login\" render={() =>\n        user ? <Redirect to=\"/\"/> : loginForm()}\n      />\n      <Route path=\"/signup\" render={() => <SignUpForm handleLogin={handleLogin}/>}/>\n      <Route path=\"/\" render={() => \n        <div>\n          <div>\n            { user && <Button onClick={() => setExpandForm(!expandForm)}>Write a post     <FaPen /></Button>}\n            { user && expandForm &&\n            <PostForm \n            title={title} \n            content={content} \n            onTitleChange={({target}) => setTitle(target.value)}\n            onContentChange={({target}) => setContent(target.value)}\n            addPost={addPost}\n            />\n            }\n            <SortContainer>\n              <div className=\"sort-btn\" onClick={() => setSortDate(!sortDate)}>Sort by date <FaCalendarAlt /></div>\n              <div className=\"sort-btn\" onClick={() => setSortLikes(!sortLikes)}>Sort by likes <FaThumbsUp /></div>\n              <div className=\"sort-btn\" onClick={() => setSortComments(!sortComments)}>Sort by comments <FaComments /></div>\n            </SortContainer>\n          </div>\n          <div class=\"PostBoard\">\n            { posts && applySort(posts).map( post => (\n            <Post \n            {...post} \n            addLike={addLike}\n            key={post.id} \n            currentUser={user}\n            comment={comment}\n            addComment={addComment}\n            handleCommentChange={({target}) => setComment(target.value)}\n            />\n            ))}\n          </div>\n        </div>\n      }/>\n    </Router>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}